# bootstrap.conf (Zee) version 2012-10-31
# Written by Gary V. Vaughan, 2010

# Copyright (C) 2010, 2012 Free Software Foundation, Inc.

# This file is part of Zee.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


## -------------- ##
## Configuration. ##
## -------------- ##

# List of programs, minimum versions, and software urls required to
# bootstrap, maintain and release Zee.

# Build prerequisites
buildreq='
        git        1.5.5   http://git-scm.com
        gpg        1.4.11  http://www.gnupg.org
        help2man   1.29    http://www.gnu.org/s/help2man
        perl       5.5     http://perl.com
        tar        -       http://www.gnu.org/s/tar
'

# Additional gnulib-tool options to use.
gnulib_tool_options='
        --no-libtool
        --avoid=dummy
'

# gnulib modules used by this package.
gnulib_modules='
        maintainer-makefile
        update-copyright
'


# Extra gnulib files that are not in modules, which override files of
# the same name installed by other bootstrap tools.
gnulib_non_module_files='
        build-aux/config.guess
        build-aux/config.sub
        build-aux/install-sh
        doc/COPYINGv3
        doc/INSTALL
'

# The not-synced with gnulib warning is bogus until upstream adopts
# the saner bootstrap script.
require_bootstrap_uptodate=:

## --------------- ##
## Hook functions. ##
## --------------- ##

# package_ignore_gnulib_ignore
# -------------------------
# gnulib-tool updates m4/.gitignore and lib/.gitignore, and keeping
# generated files under version control does not make sense.  Since
# lib is entirely ignored, we only need to prepopulate the m4 ignore
# files with generated files not tracked by gnulib-tool.
package_ignore_gnulib_ignore ()
{
    $debug_cmd

    $require_macro_dir

    if test -f "$macro_dir/.gitignore" ; then
      :
    else
      func_verbose "creating initial \`$macro_dir/.gitignore'"
      cat > $macro_dir/.gitignore <<\EOF
# files created by gnulib, but that gnulib doesn't track
*~
.gitignore
gnulib-comp.m4
EOF
    fi
}
func_add_hook func_prep package_ignore_gnulib_ignore


# package_cleanup_empty_dirs
# -----------------------
# Gnulib leaves behind a few files we don't need.
package_cleanup_empty_dirs ()
{
    $debug_cmd

    rm lib/.gitignore lib/Makefile.am || exit 1
    rmdir lib || exit 1
}
func_add_hook func_fini package_cleanup_empty_dirs


# Local variables:
# mode: shell-script
# sh-indentation: 2
# eval: (add-hook 'write-file-hooks 'time-stamp)
# time-stamp-start: "# bootstrap.conf (Zee) version "
# time-stamp-format: "%:y-%02m-%02d"
# time-stamp-end: "$"
# End:
